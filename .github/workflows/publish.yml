name: Build - publish

on:
  push:
    branches:
      - main
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

env:
  PROJECT_ID: o1labs-192920
  GAR_LOCATION: asia-northeast3
  GCP_SA_KEY: ${{ secrets.GCP_SA_KEY }}
  REGISTRY_URL: asia-northeast3-docker.pkg.dev/o1labs-192920/gitops-images
  ARTIFACT_NAME_SERVER: on-chain-voting-server
  ARTIFACT_NAME_WEB: on-chain-voting-web

jobs:
  publish-server-image:
    name: Server - Build and Push Docker Image
    runs-on: ubuntu-latest
    steps:
      - name: üì• Checkout
        uses: actions/checkout@v4
      - name: ü¶Ä Get on-chain-voting server version from Cargo.toml.
        id: ocv-server
        uses: dante-signal31/rust-app-version@v1.2.0
        with:
          cargo_toml_folder: ./server/
      - name: üè∑Ô∏è Generate Tag
        run: |
          if [ "${{ github.event_name }}" == "workflow_dispatch" ]; then
            echo "TAG_SERVER=${{ steps.ocv-server.outputs.app_version }}-${{ github.sha }}" >> $GITHUB_ENV
          else
            echo "TAG_SERVER=${{ steps.ocv-server.outputs.app_version }}" >> $GITHUB_ENV
          fi
      # Docker build setup
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Cache Docker layers
        uses: actions/cache@v4
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-server-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-server-
      - name: üîë Authenticate to Google Cloud
        uses: google-github-actions/auth@v2.1.5
        with:
          credentials_json: ${{ env.GCP_SA_KEY }}
      - name: Configure Docker for Artifact Registry
        run: |
          gcloud auth configure-docker ${{ env.GAR_LOCATION }}-docker.pkg.dev
      - name: üîç Check if Tag already exists
        id: checktag
        uses: tyriis/docker-image-tag-exists@main
        with:
          registry: ${{ env.REGISTRY_URL}}
          repository: ${{ env.ARTIFACT_NAME_SERVER }}
          tag: ${{ env.TAG_SERVER }}
      - name: üõ†Ô∏èüöö Build and push on-chain-voting server Docker Image
        if: steps.checktag.outputs.tag == 'not found'
        uses: docker/build-push-action@v6
        with:
          context: ./server/
          push: true
          tags: ${{ env.REGISTRY_URL }}/${{ env.ARTIFACT_NAME_SERVER }}:${{ env.TAG_SERVER }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new,mode=max
      # Clean up cache
      - name: Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache

  publish-web-image:
    name: Web - Build and Push Docker Image
    runs-on: ubuntu-latest
    steps:
      - name: üì• Checkout
        uses: actions/checkout@v4
      - name: üáπüá∏ Get on-chain-voting web version from package.json
        id: ocv-web
        uses: martinbeentjes/npm-get-version-action@v1.3.1
        with:
          path: web
      - name: üè∑Ô∏è Generate Tag
        run: |
          if [ "${{ github.event_name }}" == "workflow_dispatch" ]; then
            echo "TAG_WEB=${{ steps.ocv-web.outputs.current-version }}-${{ github.sha }}" >> $GITHUB_ENV
          else
            echo "TAG_WEB=${{ steps.ocv-web.outputs.current-version }}" >> $GITHUB_ENV
          fi
      # Docker build setup
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Cache Docker layers
        uses: actions/cache@v4
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-web-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-web-
      - name: üîë Authenticate to Google Cloud
        uses: google-github-actions/auth@v2.1.5
        with:
          credentials_json: ${{ env.GCP_SA_KEY }}
      - name: Configure Docker for Artifact Registry
        run: |
          gcloud auth configure-docker ${{ env.GAR_LOCATION }}-docker.pkg.dev
      - name: üîç Check if Tag already exists
        id: checktag
        uses: tyriis/docker-image-tag-exists@main
        with:
          registry: ${{ env.REGISTRY_URL}}
          repository: ${{ env.ARTIFACT_NAME_WEB }}
          tag: ${{ env.TAG_WEB }}
      - name: üõ†Ô∏èüöö Build and push on-chain-voting web Docker Image
        if: steps.checktag.outputs.tag == 'not found'
        uses: docker/build-push-action@v6
        with:
          context: ./web/
          push: true
          tags: ${{ env.REGISTRY_URL }}/${{ env.ARTIFACT_NAME_WEB }}:${{ env.TAG_WEB }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new,mode=max
      # Clean up cache
      - name: Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache
